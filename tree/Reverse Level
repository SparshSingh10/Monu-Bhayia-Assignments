import java.util.*;

public class Main {
    static Scanner scn = new Scanner(System.in);
    
    public static void main(String[] args) {
        Main m = new Main();
        BinaryTree bt1 = m.new BinaryTree();
        bt1.levelArrayList();
    }
    
    private class BinaryTree {
        private class Node {
            int data;
            Node left;
            Node right;
        }
        
        private Node root;
        private int size;
        
        public BinaryTree() {
            this.root = this.takeInput(null, false);
        }
        
        public Node takeInput(Node parent, boolean ilc) {
            int cdata = scn.nextInt();
            Node child = new Node();
            child.data = cdata;
            this.size++;
            
            // left
            boolean hlc = scn.nextBoolean();
            if (hlc) {
                child.left = this.takeInput(child, true);
            }
            
            // right
            boolean hrc = scn.nextBoolean();
            if (hrc) {
                child.right = this.takeInput(child, false);
            }
            
            // return
            return child;
        }
        
        public void levelArrayList() {
            if (root == null) {
                return;
            }
            
            ArrayList<Integer> lis = new ArrayList<>();
            Queue<Node> q = new LinkedList<>();
            q.add(root);
            
            while (!q.isEmpty()) {
                Node nn = q.remove();
                lis.add(nn.data);
                if (nn.right != null)
                    q.add(nn.right);
                if (nn.left != null)
                    q.add(nn.left);
            }
            
            for (int i = lis.size() - 1; i >= 0; i--) {
                System.out.print(lis.get(i) + " ");
            }
        }
    }
}
